bash .dotfiles/install.sh
tmux
which brew
vim zshrc
vim .zshrc
vim .config/wezterm/wezterm.lua
tmux attach
tmux
tmux attach
clear
nvim .zshrc
which git
zsh
nvim $nu.env-path
tmux
which git
git
nvim $nu.env-path
which git
exit
nvim .config/wezterm/wezterm.lua
$env | table -e
$env.JBHUNT_USERNAME
nvim $nu.env-path
nvim $nu.config-path
exit
nvim $nu.env-path
exit
$env.config = {<\n>...}
$env.config = { ... showbanner: false, ... }
config nu
exit
which git
which nvim
exit
which nvim
exit
which nvim
which git
brew install carapace
nvim $nu.env-path
nvim $nu.config-path
exit
carapace --selfupdate
carapace --list --all
ls ~/.tmux
ls ~/.tmux/plugins/tpm
nvim .tmux.conf
tmux source-fil~/.tmux.conf
tmux source-file~/.tmux.conf
tmux source-file ~/.tmux.conf
which tpm
rm -rf ~/.tmux
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
which tmux
brew uninstall tmux
brew install tmux
tmux source-file ~/.tmux.conf
exit
exit
tmux source-file ~/.tmux.conf
nvim .tmux.conf
exit
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
$env.config
$env.config.show_banner = false
$env.config
$env.config.completions
config nu
which nvim
which vim
$env.config.buffer_editor = ''
$env.config.buffer_editor = '/usr/bin/vim'
config nu
which nvim
$env.config.buffer_editor = '/opt/homebrew/bin/nvim'
config nu
nvim .config/nushell/config.nu 
clear
config nu
nvim .config/nushell/config.nu 
$env.config
config nu
config nu
$env.config
$env
$env
nvim .tmux.conf
cp .tmux.conf .tmux.conf.BAK
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux source-file ~/.tmux.conf
nvim .tmux.conf
tmux -V
ls .tmux/plugins/tpm
cat .tmux/plugins/tpm/README.md
which bash
cp .dotfiles/.tmux.conf .dotfiles/.config/tmux/tmux.conf
mkdir .dotfiles/.config/tmux
cp .dotfiles/.tmux.conf .dotfiles/.config/tmux/tmux.conf
rename .dotfiles/.tmux.conf .dotfiles/.tmux.conf.BAK
ls .dotfiles
rm .dotfiles/.tmux.conf
bash .dotfiles/install.sh
find ~ -path ~/.dotfiles -prune -o -type l ! -exec test -e {} \;
find ~ -type l
find ~ --type l
ls
ls -a
ls -a | filter { |file| $file.type = 'symlink' }
ls -a | filter { |file| $file.type == 'symlink' }
ls -a | filter { |file| $file.type == 'symlink' } | filter { |file| file | test -e }
ls -a | filter { |file| $file.type == 'symlink' }
rm .tmux.conf
ls -a | where type == symlink
ls -a | where type == symlink and not exists target
ls -a --full-paths | where type == symlink and not exists target
ls -a --full-paths | where type == symlink and not (get target | path exists)
ls -a --full-paths | where type == symlink | get type.0
ls -a --full-paths | where type == symlink | get target
ls -la | where type == symlink | get target
ls -la | where type == symlink | where not exists target
ls -la | where type == symlink | where not target
ls -la | where type == symlink | get target | where not exists
ls -la | where type == symlink | get target | where null
ls -la | where type == symlink | get target is null
ls -la | where type == symlink | get target == null
ls -la | where type == symlink | get target | exists
ls -la | where type == symlink | get target | where null
ls -la | where type == symlink | where not target
ls -la | where type == symlink | filter {|a| a.target == null}
ls -la | where type == symlink | filter {|a| $a.target == null}
ls -la | where type == symlink | where (target | is-not-empty)
ls -la | where type == symlink | where (type | get target | is-not-empty)
ls -la | where type == symlink | is-not-empty target
ls -la | where type == symlink | where ($it.target | is-not-empty)
ls -la | where type == symlink | where ($it.target | is-empty)
tmux source-file ~/.config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
~/.tmux/plugins/tpm/bin/install_plugins
~/.tmux/plugins/tpm/bin/install_plugins
nvim .config/tmux/tmux.conf
cp .tmux.conf.BAK .tmux.conf
~/.tmux/plugins/tpm/bin/install_plugins
nvim ~/.tmux/plugins/tpm/bin/install_plugins
nvim ~/.tmux/plugins/tpm/bin/install_plugins.sh
nvim ~/.tmux/plugins/tpm/bin/install_plugins
nvim ~/.tmux/plugins/tpm/scripts/install_plugins.sh
tmux show-environment -g TMUX_PLUGIN_MANAGER_PATH
nvim ~/.zshrc
nvim $nu.env-path
$env
exit
exit
nvim $nu.env-path
which nvim
nvim $nu.config-path
config nu
exit
exit
~/.tmux/plugins/tpm/bin/install_plugins
$env
nvim $nu.env-path
rm .tmux.conf
~/.tmux/plugins/tpm/bin/install_plugins
nvim ~/.config/tmux/tmux.conf
exit
tmux source ~/.config/tmux/tmux.conf
nvim ~/.config/tmux/tmux.conf
~/.tmux/plugins/tpm/bin/install_plugins
cp .tmux.conf.BAK .dotfiles/.config/tmux/tmux.conf
nvim ~/.config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
~/.tmux/plugins/tpm/bin/install_plugins
nvim ~/.config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
exit
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
nvim ~/.tmux/plugins/tpm/scripts/check_tmux_version.sh 
nvim ~/.tmux/plugins/tpm/tpm
~/.tmux/plugins/tpm/scripts/source_plugins.sh
nvim ~/.tmux/plugins/tpm/scripts/source_plugins.sh 
~/.tmux/plugins/tpm/tpm
tmux source ~/.config/tmux/tmux.conf
~/.tmux/plugins/tpm/tpm
nvim ~/.tmux/plugins/tpm/tpm
ls ~/.tmux/plugins/tpm/bindings
.tmux/plugins/tpm/bindings/install_plugins
nvim .tmux/plugins/ptm/bindings/install_plugins
.tmux/plugins/tpm/scripts/install_plugins.sh
ls ~/.tmux/plugins/tpm/bindings
.tmux/plugins/tpm/bindings/install_plugins
exit
nvim .tmux/plugins/tpm/bindings/install_plugins
exit
tmux source ~/.config/tmux/tmux.conf
.tmux/plugins/tpm/tpm
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
tmux run-shell '~/.tmux/plugins/tpm/tpm'
bash .tmux/plugins/tpm/tpm
nvim .tmux/plugins/tpm/tpm
tmux run-shell '~/.tmux/plugins/tpm/tpm'
ls
tmux run '~/.tmux/plugins/tpm/tpm'
nvim .tmux/plugins/tpm/tpm
tmux run '~/.tmux/plugins/tpm/tpm'
ls usr
ls /usr
nvim .config/tmux/tmux.conf
tmux run '~/.tmux/plugins/tpm/tpm'
tmux source ~/.config/tmux/tmux.conf
nvim .tmux/plugins/tpm/tpm
exit
exit
cd .dotfiles
git commit -a -m "fix tpm failing"
ls -la .dotfiles
ls -la
cat .config/tpm/tpm.conf
cd ..
cd .dotfiles
cat .config/tmux/tmux.conf
clear
nvim .stowrc
ls
ls -la
rm ~/.zprofile
mv .zprofile ~/.zprofile
rm ~/.zshenv
mv .zshenv ~/.zshenv
rm ~/.zshrc
mv .zshrc ~/.zshrc
ls -la
rm README.md
rm install.sh
nvim .stowrc
stow .
nvim .stowrc
cd ..
cp .config .config.BAK
ls .dotfiles
nvim .dotfiles/.stowrc
cd .dotfiles
stow .
cd ~
nvim .dotfiles/.stowrc
brew install atuin
mkdir ~/.local/share/atuin/
atuin init nu | save ~/.local/share/init.nu
nvim .config/nushell/config.nu 
restart
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
mkdir ~/.config/tmux/plugins/catppuccin
git clone -b v2.1.2 https://github.com/catppuccin/tmux.git ~/.config/tmux/plugins/catpuccin/tmux
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
exit
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
nvim .config/wezterm/wezterm.lua
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/tmux/tmux.conf
tmux source ~/.config/tmux/tmux.conf
nvim .config/wezterm/wezterm.lua
nvim .config/nushell/config.nu
5 | into string
5 | into string | contains 1
5 | into string | contains "1"
5 | into string | has "1"
5 | into string | str contains "1"
5 | string contains "1"
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
nvim .config/nushell/config.nu
source .config/nushell/config.nu
$env | lines
$env | items
$env | find TMUX | is-empty
nvim .config/nushell/config.nu
$env | find TMUX | is-empty
nvim .config/nushell/config.nu
source .config/nushell/config.nu
$env | has TMUX
nvim .config/tmux/tmux.conf
nvim .config/nvim/
nvim .config/nvim
nvim .config/nushell/config.nu
nvim .config/nvim
clear
clear
nvim .config/tmux/tmux.conf
nvim .config
nvim .dotfiles/atuin/config.toml
touch .dotfiles/atuin/config.toml
mkdir .dotfiles/atuin
nvim .dotfiles/atuin/config.toml
cd .dotfiles
git add .
